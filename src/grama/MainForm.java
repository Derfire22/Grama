package grama;



import models.Graph;
import models.Lien;
import models.Noeud;
import controller.interfaces.GraphDisplayListener;
import java.io.File;
import java.text.DecimalFormat;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Elliot
 */
public class MainForm extends javax.swing.JFrame implements GraphDisplayListener {

    /**
     * Creates new form MainForm
     */
    private Graph mainGraph = new Graph();

    public MainForm() {
        initComponents();
        this.setLocationRelativeTo(null);

        mainGraphDisplay.setListener(this);
        mainGraphDisplay.setCompareAbility(true);
        if (mainGraph.LoadCSV("graph_map.csv")) {
            //Tester si le graph s'est bien charg√©
            mainGraphDisplay.setGraph(mainGraph);
            initGUI();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LeftMenuPanel = new javax.swing.JPanel();
        TopPanel = new javax.swing.JPanel();
        AppLabel = new javax.swing.JLabel();
        TabPanel = new javax.swing.JTabbedPane();
        GraphOptionPanel = new javax.swing.JPanel();
        GraphStatPanel = new javax.swing.JPanel();
        GraphStatNbLiens = new javax.swing.JLabel();
        GraphStatNbNoeuds = new javax.swing.JLabel();
        GraphStatNbErreurs = new javax.swing.JLabel();
        GraphViewPanel = new javax.swing.JPanel();
        GraphNodeViewCheckBox = new javax.swing.JCheckBox();
        GraphLiensViewCheckBox = new javax.swing.JCheckBox();
        GraphBackgroundViewCheckBox = new javax.swing.JCheckBox();
        GraphComparePanel = new javax.swing.JPanel();
        GraphCompareNode1 = new javax.swing.JLabel();
        GraphCompareNode2 = new javax.swing.JLabel();
        GraphCompareDistance = new javax.swing.JLabel();
        GraphCompareDistanceKm = new javax.swing.JLabel();
        GraphCompareDetails = new javax.swing.JLabel();
        GraphCompareOpen = new javax.swing.JLabel();
        GraphCompareGastro = new javax.swing.JLabel();
        GraphCompareCulture = new javax.swing.JLabel();
        NoeudsOptionPanel = new javax.swing.JPanel();
        NoeudsStatPanel = new javax.swing.JPanel();
        NoeudsStatNbVilles = new javax.swing.JLabel();
        NoeudsStatNbRestaurants = new javax.swing.JLabel();
        NoeudsStatNbLoisirs = new javax.swing.JLabel();
        NoeudsViewPanel = new javax.swing.JPanel();
        NoeudsVilleViewCheckBox = new javax.swing.JCheckBox();
        NoeudsRestauViewCheckBox = new javax.swing.JCheckBox();
        NoeudsLoisirsViewCheckBox = new javax.swing.JCheckBox();
        NoeudSearchPanel = new javax.swing.JPanel();
        NoeudsSearchTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        NoeudsSearchComboBox = new javax.swing.JComboBox<>();
        NoeudsDetailsPanel = new javax.swing.JPanel();
        NoeudsDetailsSelected = new javax.swing.JLabel();
        NoeudsDetailsType = new javax.swing.JLabel();
        NoeudsDetailsNbLiens = new javax.swing.JLabel();
        NoeudsDetailsNearbyCity = new javax.swing.JLabel();
        NoeudsDetailsNearbyRest = new javax.swing.JLabel();
        NoeudsDetailsNearbyLoisirs = new javax.swing.JLabel();
        LiensOptionPanel = new javax.swing.JPanel();
        LiensStatPanel = new javax.swing.JPanel();
        LiensStatNbDep = new javax.swing.JLabel();
        LiensStatNbNation = new javax.swing.JLabel();
        LiensStatNbAuto = new javax.swing.JLabel();
        LiensViewPanel = new javax.swing.JPanel();
        LiensDepViewCheckBox = new javax.swing.JCheckBox();
        LiensNationViewCheckBox = new javax.swing.JCheckBox();
        LiensAutoViewCheckBox = new javax.swing.JCheckBox();
        LienSearchPanel = new javax.swing.JPanel();
        LiensSearchTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        LiensSearchComboBox = new javax.swing.JComboBox<>();
        LienDetailsPanel = new javax.swing.JPanel();
        LienDetailsSelected = new javax.swing.JLabel();
        LienDetailsType = new javax.swing.JLabel();
        LienDetailsDistance = new javax.swing.JLabel();
        LienDetailsNoeud1 = new javax.swing.JLabel();
        LienDetailsNoeud2 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        mainGraphDisplay = new gui.GraphDisplayPane();
        MenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        OpenFileMenuItem = new javax.swing.JMenuItem();
        ExitMenuItem = new javax.swing.JMenuItem();
        ViewMenu = new javax.swing.JMenu();
        ReloadGraphMenuItem = new javax.swing.JMenuItem();
        AutomaticTabSwitchMenuItem = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Grama");
        setMinimumSize(new java.awt.Dimension(1085, 750));
        setSize(new java.awt.Dimension(1085, 750));

        LeftMenuPanel.setPreferredSize(new java.awt.Dimension(250, 515));
        LeftMenuPanel.setLayout(new java.awt.BorderLayout());

        AppLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AppLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AppLabel.setText("GRAMA");
        AppLabel.setPreferredSize(new java.awt.Dimension(200, 50));
        TopPanel.add(AppLabel);

        LeftMenuPanel.add(TopPanel, java.awt.BorderLayout.NORTH);

        TabPanel.setMinimumSize(new java.awt.Dimension(250, 250));
        TabPanel.setPreferredSize(new java.awt.Dimension(250, 455));

        GraphOptionPanel.setMaximumSize(new java.awt.Dimension(250, 250));
        GraphOptionPanel.setMinimumSize(new java.awt.Dimension(250, 250));
        GraphOptionPanel.setPreferredSize(new java.awt.Dimension(250, 250));

        GraphStatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Statistiques", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        GraphStatPanel.setPreferredSize(new java.awt.Dimension(238, 107));

        GraphStatNbLiens.setText("Nombre de Liens : 0");

        GraphStatNbNoeuds.setText("Nombre de Noeuds : 0");

        GraphStatNbErreurs.setText("Nombre d'erreurs : 0");

        javax.swing.GroupLayout GraphStatPanelLayout = new javax.swing.GroupLayout(GraphStatPanel);
        GraphStatPanel.setLayout(GraphStatPanelLayout);
        GraphStatPanelLayout.setHorizontalGroup(
            GraphStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphStatPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(GraphStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GraphStatNbLiens, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(GraphStatNbErreurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GraphStatNbNoeuds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        GraphStatPanelLayout.setVerticalGroup(
            GraphStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphStatPanelLayout.createSequentialGroup()
                .addComponent(GraphStatNbLiens)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphStatNbNoeuds)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphStatNbErreurs)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        GraphViewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Affichage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        GraphViewPanel.setPreferredSize(new java.awt.Dimension(238, 110));

        GraphNodeViewCheckBox.setSelected(true);
        GraphNodeViewCheckBox.setText("Afficher les noeuds");
        GraphNodeViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphNodeViewCheckBoxActionPerformed(evt);
            }
        });

        GraphLiensViewCheckBox.setSelected(true);
        GraphLiensViewCheckBox.setText("Afficher les liens");
        GraphLiensViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphLiensViewCheckBoxActionPerformed(evt);
            }
        });

        GraphBackgroundViewCheckBox.setSelected(true);
        GraphBackgroundViewCheckBox.setText("Afficher le fond de carte");
        GraphBackgroundViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphBackgroundViewCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GraphViewPanelLayout = new javax.swing.GroupLayout(GraphViewPanel);
        GraphViewPanel.setLayout(GraphViewPanelLayout);
        GraphViewPanelLayout.setHorizontalGroup(
            GraphViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphViewPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(GraphViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GraphLiensViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GraphNodeViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(GraphBackgroundViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        GraphViewPanelLayout.setVerticalGroup(
            GraphViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphViewPanelLayout.createSequentialGroup()
                .addComponent(GraphNodeViewCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphLiensViewCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphBackgroundViewCheckBox)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        GraphComparePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comparaison", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        GraphCompareNode1.setText("Noeud 1 :");

        GraphCompareNode2.setText("Noeud 2 :");

        GraphCompareDistance.setText("Distance (en noeuds) :");

        GraphCompareDistanceKm.setText("Distance (en Km) :");

        GraphCompareDetails.setText("Le noeud 1 par rapport au noeud 2 :");

        GraphCompareOpen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        GraphCompareGastro.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        GraphCompareCulture.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout GraphComparePanelLayout = new javax.swing.GroupLayout(GraphComparePanel);
        GraphComparePanel.setLayout(GraphComparePanelLayout);
        GraphComparePanelLayout.setHorizontalGroup(
            GraphComparePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphComparePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GraphComparePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GraphComparePanelLayout.createSequentialGroup()
                        .addGroup(GraphComparePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GraphCompareNode1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GraphCompareNode2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GraphCompareDistance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GraphCompareDistanceKm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GraphCompareDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(GraphCompareGastro, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(GraphCompareOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GraphCompareCulture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        GraphComparePanelLayout.setVerticalGroup(
            GraphComparePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphComparePanelLayout.createSequentialGroup()
                .addComponent(GraphCompareNode1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareNode2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareDistance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareDistanceKm, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareGastro, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphCompareCulture, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout GraphOptionPanelLayout = new javax.swing.GroupLayout(GraphOptionPanel);
        GraphOptionPanel.setLayout(GraphOptionPanelLayout);
        GraphOptionPanelLayout.setHorizontalGroup(
            GraphOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GraphOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GraphOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(GraphViewPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GraphStatPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GraphComparePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        GraphOptionPanelLayout.setVerticalGroup(
            GraphOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraphOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GraphStatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GraphComparePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        TabPanel.addTab("Graph", GraphOptionPanel);

        NoeudsStatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Statistiques", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        NoeudsStatNbVilles.setText("Nombre de villes : 0");

        NoeudsStatNbRestaurants.setText("Nombre de restaurants : 0");

        NoeudsStatNbLoisirs.setText("Nombre de loisirs: 0");

        javax.swing.GroupLayout NoeudsStatPanelLayout = new javax.swing.GroupLayout(NoeudsStatPanel);
        NoeudsStatPanel.setLayout(NoeudsStatPanelLayout);
        NoeudsStatPanelLayout.setHorizontalGroup(
            NoeudsStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsStatPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(NoeudsStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NoeudsStatNbRestaurants, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(NoeudsStatNbVilles, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(NoeudsStatNbLoisirs, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        NoeudsStatPanelLayout.setVerticalGroup(
            NoeudsStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NoeudsStatNbVilles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsStatNbRestaurants)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsStatNbLoisirs)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        NoeudsViewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Affichage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        NoeudsVilleViewCheckBox.setForeground(java.awt.Color.red);
        NoeudsVilleViewCheckBox.setSelected(true);
        NoeudsVilleViewCheckBox.setText("Afficher les villes [V]");
        NoeudsVilleViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoeudsVilleViewCheckBoxActionPerformed(evt);
            }
        });

        NoeudsRestauViewCheckBox.setForeground(java.awt.Color.blue);
        NoeudsRestauViewCheckBox.setSelected(true);
        NoeudsRestauViewCheckBox.setText("Afficher les restaurants [R]");
        NoeudsRestauViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoeudsRestauViewCheckBoxActionPerformed(evt);
            }
        });

        NoeudsLoisirsViewCheckBox.setForeground(new java.awt.Color(0, 204, 0));
        NoeudsLoisirsViewCheckBox.setSelected(true);
        NoeudsLoisirsViewCheckBox.setText("Afficher les loisirs [L]");
        NoeudsLoisirsViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoeudsLoisirsViewCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NoeudsViewPanelLayout = new javax.swing.GroupLayout(NoeudsViewPanel);
        NoeudsViewPanel.setLayout(NoeudsViewPanelLayout);
        NoeudsViewPanelLayout.setHorizontalGroup(
            NoeudsViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsViewPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(NoeudsViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NoeudsRestauViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsVilleViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(NoeudsLoisirsViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        NoeudsViewPanelLayout.setVerticalGroup(
            NoeudsViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsViewPanelLayout.createSequentialGroup()
                .addComponent(NoeudsVilleViewCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsRestauViewCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsLoisirsViewCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        NoeudSearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        NoeudsSearchTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                NoeudsSearchTextFieldCaretUpdate(evt);
            }
        });

        jLabel1.setText("Nom du Noeud :");

        NoeudsSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        NoeudsSearchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoeudsSearchComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NoeudSearchPanelLayout = new javax.swing.GroupLayout(NoeudSearchPanel);
        NoeudSearchPanel.setLayout(NoeudSearchPanelLayout);
        NoeudSearchPanelLayout.setHorizontalGroup(
            NoeudSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NoeudSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NoeudsSearchTextField)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsSearchComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        NoeudSearchPanelLayout.setVerticalGroup(
            NoeudSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudSearchPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        NoeudsDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        NoeudsDetailsSelected.setText("Noeud : ");

        NoeudsDetailsType.setText("Type de Noeud :");

        NoeudsDetailsNbLiens.setText("Nombre de liens :");

        NoeudsDetailsNearbyCity.setText("Villes voisines :");

        NoeudsDetailsNearbyRest.setText("Restaurants voisins :");

        NoeudsDetailsNearbyLoisirs.setText("Loisirs voisins :");

        javax.swing.GroupLayout NoeudsDetailsPanelLayout = new javax.swing.GroupLayout(NoeudsDetailsPanel);
        NoeudsDetailsPanel.setLayout(NoeudsDetailsPanelLayout);
        NoeudsDetailsPanelLayout.setHorizontalGroup(
            NoeudsDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NoeudsDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NoeudsDetailsType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsDetailsNearbyCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsDetailsNearbyRest, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                    .addComponent(NoeudsDetailsNbLiens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(NoeudsDetailsPanelLayout.createSequentialGroup()
                        .addGroup(NoeudsDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NoeudsDetailsNearbyLoisirs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NoeudsDetailsSelected, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        NoeudsDetailsPanelLayout.setVerticalGroup(
            NoeudsDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsDetailsPanelLayout.createSequentialGroup()
                .addComponent(NoeudsDetailsSelected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsDetailsType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsDetailsNbLiens)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsDetailsNearbyCity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsDetailsNearbyRest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsDetailsNearbyLoisirs)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout NoeudsOptionPanelLayout = new javax.swing.GroupLayout(NoeudsOptionPanel);
        NoeudsOptionPanel.setLayout(NoeudsOptionPanelLayout);
        NoeudsOptionPanelLayout.setHorizontalGroup(
            NoeudsOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NoeudsOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NoeudSearchPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsStatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NoeudsDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        NoeudsOptionPanelLayout.setVerticalGroup(
            NoeudsOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NoeudsOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NoeudsStatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoeudsDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        TabPanel.addTab("Noeuds", NoeudsOptionPanel);

        LiensStatPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Statistiques", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        LiensStatNbDep.setText("Nombre de d√©partementales : 0");

        LiensStatNbNation.setText("Nombre de nationales : 0");

        LiensStatNbAuto.setText("Nombre d'autoroutes : 0");

        javax.swing.GroupLayout LiensStatPanelLayout = new javax.swing.GroupLayout(LiensStatPanel);
        LiensStatPanel.setLayout(LiensStatPanelLayout);
        LiensStatPanelLayout.setHorizontalGroup(
            LiensStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiensStatPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(LiensStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LiensStatNbNation, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(LiensStatNbDep, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(LiensStatNbAuto, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addContainerGap())
        );
        LiensStatPanelLayout.setVerticalGroup(
            LiensStatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiensStatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LiensStatNbDep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensStatNbNation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensStatNbAuto)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        LiensViewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Affichage", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        LiensDepViewCheckBox.setSelected(true);
        LiensDepViewCheckBox.setText("Afficher les d√©partementales");
        LiensDepViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiensDepViewCheckBoxActionPerformed(evt);
            }
        });

        LiensNationViewCheckBox.setSelected(true);
        LiensNationViewCheckBox.setText("Afficher les nationales");
        LiensNationViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiensNationViewCheckBoxActionPerformed(evt);
            }
        });

        LiensAutoViewCheckBox.setSelected(true);
        LiensAutoViewCheckBox.setText("Afficher les autoroutes");
        LiensAutoViewCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiensAutoViewCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LiensViewPanelLayout = new javax.swing.GroupLayout(LiensViewPanel);
        LiensViewPanel.setLayout(LiensViewPanelLayout);
        LiensViewPanelLayout.setHorizontalGroup(
            LiensViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiensViewPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(LiensViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LiensNationViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LiensDepViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(LiensAutoViewCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LiensViewPanelLayout.setVerticalGroup(
            LiensViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiensViewPanelLayout.createSequentialGroup()
                .addComponent(LiensDepViewCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensNationViewCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensAutoViewCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        LienSearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Recherche", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        LiensSearchTextField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                LiensSearchTextFieldCaretUpdate(evt);
            }
        });

        jLabel2.setText("Nom du Lien :");

        LiensSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        LiensSearchComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LiensSearchComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LienSearchPanelLayout = new javax.swing.GroupLayout(LienSearchPanel);
        LienSearchPanel.setLayout(LienSearchPanelLayout);
        LienSearchPanelLayout.setHorizontalGroup(
            LienSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LienSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LienSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LiensSearchTextField)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LiensSearchComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LienSearchPanelLayout.setVerticalGroup(
            LienSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LienSearchPanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        LienDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informations", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        LienDetailsSelected.setText("Lien selectionn√© : ");

        LienDetailsType.setText("Type de route :");

        LienDetailsDistance.setText("Distance : ");

        LienDetailsNoeud1.setText("Noeud 1 :");

        LienDetailsNoeud2.setText("Noeud 2 :");

        javax.swing.GroupLayout LienDetailsPanelLayout = new javax.swing.GroupLayout(LienDetailsPanel);
        LienDetailsPanel.setLayout(LienDetailsPanelLayout);
        LienDetailsPanelLayout.setHorizontalGroup(
            LienDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LienDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LienDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LienDetailsNoeud1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(LienDetailsPanelLayout.createSequentialGroup()
                        .addGroup(LienDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LienDetailsType)
                            .addComponent(LienDetailsSelected)
                            .addComponent(LienDetailsDistance))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(LienDetailsNoeud2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LienDetailsPanelLayout.setVerticalGroup(
            LienDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LienDetailsPanelLayout.createSequentialGroup()
                .addComponent(LienDetailsSelected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LienDetailsType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LienDetailsDistance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LienDetailsNoeud1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LienDetailsNoeud2))
        );

        javax.swing.GroupLayout LiensOptionPanelLayout = new javax.swing.GroupLayout(LiensOptionPanel);
        LiensOptionPanel.setLayout(LiensOptionPanelLayout);
        LiensOptionPanelLayout.setHorizontalGroup(
            LiensOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiensOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LiensOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LiensStatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LiensViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LienSearchPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LienDetailsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LiensOptionPanelLayout.setVerticalGroup(
            LiensOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LiensOptionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LiensStatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LiensViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LienSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LienDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        TabPanel.addTab("Liens", LiensOptionPanel);

        LeftMenuPanel.add(TabPanel, java.awt.BorderLayout.CENTER);
        TabPanel.getAccessibleContext().setAccessibleName("");

        getContentPane().add(LeftMenuPanel, java.awt.BorderLayout.LINE_START);

        MainPanel.setLayout(new java.awt.CardLayout());

        mainGraphDisplay.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout mainGraphDisplayLayout = new javax.swing.GroupLayout(mainGraphDisplay);
        mainGraphDisplay.setLayout(mainGraphDisplayLayout);
        mainGraphDisplayLayout.setHorizontalGroup(
            mainGraphDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 835, Short.MAX_VALUE)
        );
        mainGraphDisplayLayout.setVerticalGroup(
            mainGraphDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        MainPanel.add(mainGraphDisplay, "MainCard");

        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);

        FileMenu.setText("Fichier");

        OpenFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        OpenFileMenuItem.setText("Ouvrir un fichier");
        OpenFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(OpenFileMenuItem);

        ExitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ExitMenuItem.setText("Quitter");
        ExitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitMenuItem);

        MenuBar.add(FileMenu);

        ViewMenu.setText("Affichage");

        ReloadGraphMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ReloadGraphMenuItem.setText("Recharger le graph");
        ReloadGraphMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadGraphMenuItemActionPerformed(evt);
            }
        });
        ViewMenu.add(ReloadGraphMenuItem);

        AutomaticTabSwitchMenuItem.setSelected(true);
        AutomaticTabSwitchMenuItem.setText("Changement automatique de cat√©gorie");
        AutomaticTabSwitchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutomaticTabSwitchMenuItemActionPerformed(evt);
            }
        });
        ViewMenu.add(AutomaticTabSwitchMenuItem);

        MenuBar.add(ViewMenu);

        setJMenuBar(MenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuItemActionPerformed
        dispose();
    }//GEN-LAST:event_ExitMenuItemActionPerformed

    private void GraphNodeViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphNodeViewCheckBoxActionPerformed
        boolean selected = GraphNodeViewCheckBox.isSelected();
        NoeudsVilleViewCheckBox.setSelected(selected);
        NoeudsRestauViewCheckBox.setSelected(selected);
        NoeudsLoisirsViewCheckBox.setSelected(selected);
        NoeudsVilleViewCheckBox.setEnabled(selected);
        NoeudsRestauViewCheckBox.setEnabled(selected);
        NoeudsLoisirsViewCheckBox.setEnabled(selected);
        mainGraphDisplay.setTypeNoeudVisibles('V', selected);
        mainGraphDisplay.setTypeNoeudVisibles('R', selected);
        mainGraphDisplay.setTypeNoeudVisibles('L', selected);
    }//GEN-LAST:event_GraphNodeViewCheckBoxActionPerformed

    private void GraphLiensViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphLiensViewCheckBoxActionPerformed
        boolean selected = GraphLiensViewCheckBox.isSelected();
        LiensDepViewCheckBox.setSelected(selected);
        LiensNationViewCheckBox.setSelected(selected);
        LiensAutoViewCheckBox.setSelected(selected);
        LiensDepViewCheckBox.setEnabled(selected);
        LiensNationViewCheckBox.setEnabled(selected);
        LiensAutoViewCheckBox.setEnabled(selected);
        mainGraphDisplay.setTypeLiensVisibles('D', selected);
        mainGraphDisplay.setTypeLiensVisibles('N', selected);
        mainGraphDisplay.setTypeLiensVisibles('A', selected);
    }//GEN-LAST:event_GraphLiensViewCheckBoxActionPerformed

    private void GraphBackgroundViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphBackgroundViewCheckBoxActionPerformed
        mainGraphDisplay.setBackground_visible(GraphBackgroundViewCheckBox.isSelected());
    }//GEN-LAST:event_GraphBackgroundViewCheckBoxActionPerformed

    private void NoeudsVilleViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoeudsVilleViewCheckBoxActionPerformed
        mainGraphDisplay.setTypeNoeudVisibles('V', NoeudsVilleViewCheckBox.isSelected());
    }//GEN-LAST:event_NoeudsVilleViewCheckBoxActionPerformed

    private void NoeudsRestauViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoeudsRestauViewCheckBoxActionPerformed
        mainGraphDisplay.setTypeNoeudVisibles('R', NoeudsRestauViewCheckBox.isSelected());
    }//GEN-LAST:event_NoeudsRestauViewCheckBoxActionPerformed

    private void NoeudsLoisirsViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoeudsLoisirsViewCheckBoxActionPerformed
        mainGraphDisplay.setTypeNoeudVisibles('L', NoeudsLoisirsViewCheckBox.isSelected());
    }//GEN-LAST:event_NoeudsLoisirsViewCheckBoxActionPerformed

    private void LiensDepViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LiensDepViewCheckBoxActionPerformed
        mainGraphDisplay.setTypeLiensVisibles('D', NoeudsLoisirsViewCheckBox.isSelected());
    }//GEN-LAST:event_LiensDepViewCheckBoxActionPerformed

    private void LiensNationViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LiensNationViewCheckBoxActionPerformed
        mainGraphDisplay.setTypeLiensVisibles('N', LiensNationViewCheckBox.isSelected());
    }//GEN-LAST:event_LiensNationViewCheckBoxActionPerformed

    private void LiensAutoViewCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LiensAutoViewCheckBoxActionPerformed
        mainGraphDisplay.setTypeLiensVisibles('A', LiensAutoViewCheckBox.isSelected());
    }//GEN-LAST:event_LiensAutoViewCheckBoxActionPerformed

    private void ReloadGraphMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadGraphMenuItemActionPerformed
        mainGraph.resetNoeudsPositions();
        mainGraphDisplay.calcPositions();
        mainGraphDisplay.repaint();
    }//GEN-LAST:event_ReloadGraphMenuItemActionPerformed

    private void OpenFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileMenuItemActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Ouvrir un fichier");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Fichiers CSV (*.csv)", "csv"));
        //fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if (mainGraph.LoadCSV(selectedFile.getPath())) {
                //Tester si le graph s'est bien charg√©
                mainGraphDisplay.setGraph(mainGraph);
                initGUI();
            }
        }
    }//GEN-LAST:event_OpenFileMenuItemActionPerformed

    private void LiensSearchTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_LiensSearchTextFieldCaretUpdate
        LiensSearchComboBox.removeAllItems();
        for (models.Lien l : mainGraph.searchLiens(LiensSearchTextField.getText())) {
            LiensSearchComboBox.addItem(l.toString());
        }
    }//GEN-LAST:event_LiensSearchTextFieldCaretUpdate

    private void LiensSearchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LiensSearchComboBoxActionPerformed
        Object select = LiensSearchComboBox.getSelectedItem();
        if (select != null) {
            mainGraphDisplay.selectLien(mainGraph.getLien(select.toString()));
        }
    }//GEN-LAST:event_LiensSearchComboBoxActionPerformed

    private void NoeudsSearchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoeudsSearchComboBoxActionPerformed
        Object select = NoeudsSearchComboBox.getSelectedItem();
        if (select != null) {
            mainGraphDisplay.selectNoeud(mainGraph.getNoeud(select.toString()));
        }
    }//GEN-LAST:event_NoeudsSearchComboBoxActionPerformed

    private void NoeudsSearchTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_NoeudsSearchTextFieldCaretUpdate
        NoeudsSearchComboBox.removeAllItems();
        for (models.Noeud n : mainGraph.searchNoeuds(NoeudsSearchTextField.getText())) {
            NoeudsSearchComboBox.addItem(n.toString());
        }
    }//GEN-LAST:event_NoeudsSearchTextFieldCaretUpdate

    private void AutomaticTabSwitchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutomaticTabSwitchMenuItemActionPerformed

    }//GEN-LAST:event_AutomaticTabSwitchMenuItemActionPerformed

    private void initGUI() {
        GraphStatNbLiens.setText("Nombre de Liens : " + mainGraph.getLiens().size());
        GraphStatNbNoeuds.setText("Nombre de Noeuds : " + mainGraph.getNoeuds().size());
        GraphStatNbErreurs.setText("Nombre d'erreurs : " + mainGraph.getNb_erreurs());
        GraphComparePanel.setVisible(false);
        GraphCompareDetails.setVisible(false);

        NoeudsStatNbVilles.setText("Nombre de villes : " + mainGraph.getNbNoeuds(mainGraph.getNoeuds(), 'V'));
        NoeudsStatNbRestaurants.setText("Nombre de restaurants : " + mainGraph.getNbNoeuds(mainGraph.getNoeuds(), 'R'));
        NoeudsStatNbLoisirs.setText("Nombre de loisirs : " + mainGraph.getNbNoeuds(mainGraph.getNoeuds(), 'L'));
        NoeudsSearchTextFieldCaretUpdate(null);
        mainGraphDisplay.selectNoeud(null);
        NoeudsDetailsPanel.setVisible(false);

        LiensStatNbDep.setText("Nombre de d√©partementales : " + mainGraph.getNbLiens(mainGraph.getLiens(), 'D'));
        LiensStatNbNation.setText("Nombre de nationales : " + mainGraph.getNbLiens(mainGraph.getLiens(), 'N'));
        LiensStatNbAuto.setText("Nombre d'autoroutes : " + mainGraph.getNbLiens(mainGraph.getLiens(), 'A'));
        LiensSearchTextFieldCaretUpdate(null);
        mainGraphDisplay.selectLien(null);
        LienDetailsPanel.setVisible(false);

        TabPanel.setSelectedComponent(GraphOptionPanel);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                //javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AppLabel;
    private javax.swing.JCheckBoxMenuItem AutomaticTabSwitchMenuItem;
    private javax.swing.JMenuItem ExitMenuItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JCheckBox GraphBackgroundViewCheckBox;
    private javax.swing.JLabel GraphCompareCulture;
    private javax.swing.JLabel GraphCompareDetails;
    private javax.swing.JLabel GraphCompareDistance;
    private javax.swing.JLabel GraphCompareDistanceKm;
    private javax.swing.JLabel GraphCompareGastro;
    private javax.swing.JLabel GraphCompareNode1;
    private javax.swing.JLabel GraphCompareNode2;
    private javax.swing.JLabel GraphCompareOpen;
    private javax.swing.JPanel GraphComparePanel;
    private javax.swing.JCheckBox GraphLiensViewCheckBox;
    private javax.swing.JCheckBox GraphNodeViewCheckBox;
    private javax.swing.JPanel GraphOptionPanel;
    private javax.swing.JLabel GraphStatNbErreurs;
    private javax.swing.JLabel GraphStatNbLiens;
    private javax.swing.JLabel GraphStatNbNoeuds;
    private javax.swing.JPanel GraphStatPanel;
    private javax.swing.JPanel GraphViewPanel;
    private javax.swing.JPanel LeftMenuPanel;
    private javax.swing.JLabel LienDetailsDistance;
    private javax.swing.JLabel LienDetailsNoeud1;
    private javax.swing.JLabel LienDetailsNoeud2;
    private javax.swing.JPanel LienDetailsPanel;
    private javax.swing.JLabel LienDetailsSelected;
    private javax.swing.JLabel LienDetailsType;
    private javax.swing.JPanel LienSearchPanel;
    private javax.swing.JCheckBox LiensAutoViewCheckBox;
    private javax.swing.JCheckBox LiensDepViewCheckBox;
    private javax.swing.JCheckBox LiensNationViewCheckBox;
    private javax.swing.JPanel LiensOptionPanel;
    private javax.swing.JComboBox<String> LiensSearchComboBox;
    private javax.swing.JTextField LiensSearchTextField;
    private javax.swing.JLabel LiensStatNbAuto;
    private javax.swing.JLabel LiensStatNbDep;
    private javax.swing.JLabel LiensStatNbNation;
    private javax.swing.JPanel LiensStatPanel;
    private javax.swing.JPanel LiensViewPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel NoeudSearchPanel;
    private javax.swing.JLabel NoeudsDetailsNbLiens;
    private javax.swing.JLabel NoeudsDetailsNearbyCity;
    private javax.swing.JLabel NoeudsDetailsNearbyLoisirs;
    private javax.swing.JLabel NoeudsDetailsNearbyRest;
    private javax.swing.JPanel NoeudsDetailsPanel;
    private javax.swing.JLabel NoeudsDetailsSelected;
    private javax.swing.JLabel NoeudsDetailsType;
    private javax.swing.JCheckBox NoeudsLoisirsViewCheckBox;
    private javax.swing.JPanel NoeudsOptionPanel;
    private javax.swing.JCheckBox NoeudsRestauViewCheckBox;
    private javax.swing.JComboBox<String> NoeudsSearchComboBox;
    private javax.swing.JTextField NoeudsSearchTextField;
    private javax.swing.JLabel NoeudsStatNbLoisirs;
    private javax.swing.JLabel NoeudsStatNbRestaurants;
    private javax.swing.JLabel NoeudsStatNbVilles;
    private javax.swing.JPanel NoeudsStatPanel;
    private javax.swing.JPanel NoeudsViewPanel;
    private javax.swing.JCheckBox NoeudsVilleViewCheckBox;
    private javax.swing.JMenuItem OpenFileMenuItem;
    private javax.swing.JMenuItem ReloadGraphMenuItem;
    private javax.swing.JTabbedPane TabPanel;
    private javax.swing.JPanel TopPanel;
    private javax.swing.JMenu ViewMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private gui.GraphDisplayPane mainGraphDisplay;
    // End of variables declaration//GEN-END:variables

    @Override
    public void SelectedNoeudsChanged(LinkedList<Noeud> Noeuds) {
        Noeud noeud1 = Noeuds.get(0);
        if (Noeuds.size() > 1 && noeud1 != null) {
            NoeudsDetailsSelected.setText("Noeud : " + noeud1.getNom());
            NoeudsDetailsType.setText("Type de Noeud : " + noeud1.getTypeStr());
            NoeudsDetailsNbLiens.setText("Nombre de liens : " + noeud1.getLiens().size());
            NoeudsDetailsNearbyCity.setText("Villes voisines : " + noeud1.getVoisins('V').size());
            NoeudsDetailsNearbyRest.setText("Restaurants voisins : " + noeud1.getVoisins('R').size());
            NoeudsDetailsNearbyLoisirs.setText("Loisirs voisins : " + noeud1.getVoisins('L').size());

            NoeudsDetailsPanel.setVisible(true);

            //Switch vers le panel des noeuds
            //On v√©rifie si l'option du changement automatique des tabs est activ√©
            if (AutomaticTabSwitchMenuItem.isSelected()) {
                TabPanel.setSelectedComponent(NoeudsOptionPanel);
            }

            Noeud noeud2 = Noeuds.get(1);

            if (noeud2 != null) {
                GraphCompareNode1.setText("Noeud n¬∞1 : " + noeud1.getNom());
                GraphCompareNode2.setText("Noeud n¬∞2 : " + noeud2.getNom());
                int distance = mainGraph.getDistance(noeud1, noeud2);
                String distanceText = distance == 0
                        ? "Distance (en noeuds) : +2" : "Distance (en noeuds) : " + distance;
                GraphCompareDistance.setText(distanceText);

                float distance_km = mainGraph.Dijkstra(noeud1, noeud2);

                distanceText = distance_km == Float.MAX_VALUE
                        ? "Distance : Ind√©termin√©e"
                        : "Distance : " + new DecimalFormat("0.0").format(distance_km) + " Km";

                GraphCompareDistanceKm.setText(distanceText);

                if (distance == 0 || distance == 2) {
                    GraphCompareDetails.setVisible(true);

                    String CompareString = "";
                    switch (mainGraph.Compare2DistanceNodeType(noeud1, noeud2, 'V')) {
                        case 1 -> {
                            CompareString = "plus ouvert";
                        }
                        case -1 -> {
                            CompareString = "moins ouvert";
                        }
                        default -> {
                            CompareString = "autant ouvert";
                        }
                    }

                    GraphCompareOpen.setText("Est " + CompareString);

                    switch (mainGraph.Compare2DistanceNodeType(noeud1, noeud2, 'R')) {
                        case 1 -> {
                            CompareString = "plus gastronomique";
                        }
                        case -1 -> {
                            CompareString = "moins gastronomique";
                        }
                        default -> {
                            CompareString = "autant gastronomique";
                        }
                    }

                    GraphCompareGastro.setText("Est " + CompareString);

                    switch (mainGraph.Compare2DistanceNodeType(noeud1, noeud2, 'L')) {
                        case 1 -> {
                            CompareString = "plus culturel";
                        }
                        case -1 -> {
                            CompareString = "moins culturel";
                        }
                        default -> {
                            CompareString = "autant culturel";
                        }
                    }

                    GraphCompareCulture.setText("Est " + CompareString);
                } else {
                    GraphCompareOpen.setText("");
                    GraphCompareGastro.setText("");
                    GraphCompareCulture.setText("");
                    GraphCompareDetails.setVisible(false);
                }
                GraphComparePanel.setVisible(true);
            } else {
                GraphComparePanel.setVisible(false);
            }
        } else {
            NoeudsDetailsPanel.setVisible(false);
        }
    }

    @Override
    public void SelectedLienChanged(Lien lien) {
        if (lien != null) {
            LienDetailsSelected.setText("Lien s√©lectionn√© : " + lien.toString());
            LienDetailsType.setText("Type de route : " + lien.getTypeStr());
            LienDetailsDistance.setText("Distance : " + lien.getDistance() + " Km");
            LienDetailsNoeud1.setText("Noeud 1 : " + lien.getLieu1().getNom());
            LienDetailsNoeud2.setText("Noeud 2 : " + lien.getLieu2().getNom());

            LienDetailsPanel.setVisible(true);
            //v√©rifie si l'option du changement automatique des tabs est activ√©
            if (AutomaticTabSwitchMenuItem.isSelected()) {
                TabPanel.setSelectedComponent(LiensOptionPanel);
            }
        } else {
            LienDetailsPanel.setVisible(false);
        }
    }
}
